# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddProductMediaInput {
  position: Float
  productId: String!
  type: String
  url: String!
}

input AddVariantMediaInput {
  position: Float
  type: String
  url: String!
  variantId: String!
}

input BulkCreateVariantsInput {
  productId: String!
  variants: [CreateVariantInput!]!
}

type CategoryTreeType {
  children: [CategoryTreeType!]!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  parentId: String
  path: String!
  slug: String!
}

type CategoryType {
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  parentId: String
  path: String!
  slug: String!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input ContactMessageInput {
  department: String
  email: String!
  message: String!
  name: String!
  phone: String
  subject: String!
}

type ContactMessageResult {
  id: String!
}

input CreateCategoryInput {
  description: String
  name: String!
  parentId: String
  path: String!
  slug: String!
}

input CreateNewsArticleInput {
  author: String!
  category: String!
  content: String!
  excerpt: String!
  featured: Boolean
  image: String!
  isActive: Boolean
  publishedAt: String!
  readTime: Float!
  status: String
  title: String!
}

input CreateProductInput {
  categoryId: String!
  description: String
  isActive: Boolean
  slug: String!
  status: String
  title: String!
  vendorId: String!
  productType: String
  deliveryMinDays: Int
  deliveryMaxDays: Int
  weight: Float
  weightUnit: String
  length: Float
  width: Float
  height: Float
  dimensionUnit: String
  pickupLocationId: String
  pickupLocationName: String
  pickupAddress: String
  pickupCity: String
  pickupProvince: String
  pickupPostalCode: String
  pickupCountry: String
  pickupInstructions: String
  returnPolicyId: String
  returnPolicyName: String
  returnsAccepted: Boolean
  returnPeriodDays: Int
  returnConditions: String
  restockingFeePct: Float
  returnShippingPaidBy: String
  tags: [String!]
  isbn: String
  author: String
  publisher: String
  publicationDate: String
  pages: Int
  language: String
  brand: String
  model: String
  material: String
  colour: String
  size: String
  expiryDate: String
  ingredients: String
  nutritionalInfo: String
  careInstructions: String
  warrantyPeriod: Int
  energyRating: String
  ageRating: String
  artist: String
  genre: String
  format: String
  platform: String
  licenseType: String
  serviceDuration: String
  certification: String
}

input CreateVariantInput {
  allowBackorder: Boolean
  attributes: [VariantAttributeInput!]!
  barcode: String
  compareAtPriceCents: Float
  priceCents: Float!
  productId: String!
  sku: String!
  stockQuantity: Float
  title: String!
  trackInventory: Boolean
  weightGrams: Float
}

input CreateVendorInput {
  description: String
  name: String!
  slug: String!
}

input CustomerRegisterInput {
  agreeToTerms: Boolean!
  confirmPassword: String!
  email: String!
  firstName: String
  lastName: String
  password: String!
  phone: String
  subscribeNewsletter: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input InventoryAdjustInput {
  change: Float!
  notes: String
  reason: String!
  variantId: ID!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addProductMedia(input: AddProductMediaInput!): ProductMediaType!
  addVariantMedia(input: AddVariantMediaInput!): ProductMediaType!
  adjustInventory(input: InventoryAdjustInput!): String!
  applyRetailer(input: SellerApplicationInput!): SellerApplicationType!
  applyServiceProvider(input: ServiceProviderApplicationInput!): SellerApplicationType!
  applyWholesaler(input: SellerApplicationInput!): SellerApplicationType!
  approveProduct(productId: String!): Boolean!
  approveVendor(vendorId: String!): Boolean!
  archiveProduct(productId: String!): Boolean!
  bulkCreateVariants(input: BulkCreateVariantsInput!): [ProductVariantType!]!
  changePassword(input: ChangePasswordInput!): Boolean!
  createCategory(input: CreateCategoryInput!): CategoryType!
  createNewsArticle(input: CreateNewsArticleInput!): NewsArticleType!
  createProduct(input: CreateProductInput!): ProductType!
  createVariant(input: CreateVariantInput!): ProductVariantType!
  createVendor(input: CreateVendorInput!): VendorType!
  deleteNewsArticle(id: String!): Boolean!
  deleteProduct(id: String!): Boolean!
  deleteVariant(id: String!): Boolean!
  login(input: LoginInput!): UserType!
  logout: Boolean!
  refresh: Boolean!
  register(input: RegisterInput!): UserType!
  registerCustomer(input: CustomerRegisterInput!): UserType!
  removeProductMedia(mediaId: String!): Boolean!
  removeVariantMedia(mediaId: String!): Boolean!
  sendContactMessage(input: ContactMessageInput!): ContactMessageResult!
  suspendVendor(vendorId: String!): Boolean!
  updateNewsArticle(id: String!, input: UpdateNewsArticleInput!): NewsArticleType!
  updateProduct(id: String!, input: UpdateProductInput!): ProductType!
  updateVariant(id: String!, input: UpdateVariantInput!): ProductVariantType!
}

type NewsArticleType {
  author: String!
  category: String!
  content: String!
  excerpt: String!
  featured: Boolean!
  id: ID!
  image: String!
  isActive: Boolean!
  publishedAt: DateTime!
  readTime: Float!
  status: String!
  title: String!
}

type ProductMediaType {
  id: ID!
  position: Float!
  type: String!
  url: String!
}

type ProductType {
  categoryId: String!
  description: String
  featured: Boolean!
  id: ID!
  isActive: Boolean!
  slug: String!
  status: String!
  title: String!
  vendorId: String!
}

type ProductVariantType {
  attributes: String!
  barcode: String
  compareAtPriceCents: Float
  id: ID!
  media: [ProductMediaType!]
  priceCents: Float!
  sku: String!
  stockQuantity: Float!
  title: String!
  weightGrams: Float
}

type Query {
  categories: [CategoryType!]!
  categoryTree: [CategoryTreeType!]!
  featuredNewsArticles: [NewsArticleType!]!
  me: UserType!
  newsArticle(id: String!): NewsArticleType
  newsArticles(category: String): [NewsArticleType!]!
  productById(id: String!): ProductType
  searchProducts(categoryId: String, cursor: String, isActive: Boolean, limit: Float, query: String, status: String, vendorId: String): String!
  userByEmail(email: String!): UserType
}

input RegisterInput {
  agreeToTerms: Boolean!
  confirmPassword: String!
  email: String!
  firstName: String
  lastName: String
  password: String!
  phone: String
  subscribeNewsletter: Boolean!
}

enum Role {
  ADMIN
  CUSTOMER
  RETAILER
  SERVICE_PROVIDER
  WHOLESALER
}

input SellerApplicationInput {
  address: String!
  agreeToTerms: Boolean!
  applicantType: String!
  businessName: String!
  businessRegistration: String
  businessSummary: String!
  businessType: String!
  city: String!
  email: String!
  firstName: String!
  howDidYouHear: String!
  identificationType: String!
  landline: String
  lastName: String!
  monthlyRevenue: String
  numberOfStores: String
  otherMarketplaces: String
  ownedBrands: String
  phone: String!
  physicalStores: String
  postalCode: String!
  primaryCategory: String!
  productDescription: String!
  province: String!
  resellerBrands: String
  saIdNumber: String
  socialMedia: String
  stockType: String!
  supplierToRetailers: String
  uniqueProducts: String
  vatNumber: String
  vatRegistered: String!
  website: String
}

type SellerApplicationType {
  id: String!
}

input ServiceProviderApplicationInput {
  address: String!
  agreeToBackground: Boolean!
  agreeToTerms: Boolean!
  availability: String!
  backgroundCheck: String
  bankDetails: String
  businessName: String
  businessRegistration: String
  certifications: String
  city: String!
  clientReferences: String
  dateOfBirth: String
  email: String!
  emergencyContact: String
  experience: String!
  firstName: String!
  goals: String
  hourlyRate: String!
  howDidYouHear: String!
  idNumber: String!
  identificationType: String!
  insurance: String
  lastName: String!
  motivation: String!
  phone: String!
  portfolio: String
  postalCode: String!
  primaryService: String!
  province: String!
  qualifications: String
  serviceCategories: [String!]!
  serviceRadius: String!
  transportMode: String!
  vatNumber: String
  vatRegistered: String
  workSamples: String
}

input UpdateNewsArticleInput {
  author: String
  category: String
  content: String
  excerpt: String
  featured: Boolean
  image: String
  isActive: Boolean
  publishedAt: String
  readTime: Float
  status: String
  title: String
}

input UpdateProductInput {
  categoryId: String
  description: String
  isActive: Boolean
  slug: String
  status: String
  title: String
  productType: String
  deliveryMinDays: Int
  deliveryMaxDays: Int
  weight: Float
  weightUnit: String
  length: Float
  width: Float
  height: Float
  dimensionUnit: String
  pickupLocationId: String
  pickupLocationName: String
  pickupAddress: String
  pickupCity: String
  pickupProvince: String
  pickupPostalCode: String
  pickupCountry: String
  pickupInstructions: String
  returnPolicyId: String
  returnPolicyName: String
  returnsAccepted: Boolean
  returnPeriodDays: Int
  returnConditions: String
  restockingFeePct: Float
  returnShippingPaidBy: String
  tags: [String!]
  isbn: String
  author: String
  publisher: String
  publicationDate: String
  pages: Int
  language: String
  brand: String
  model: String
  material: String
  colour: String
  size: String
  expiryDate: String
  ingredients: String
  nutritionalInfo: String
  careInstructions: String
  warrantyPeriod: Int
  energyRating: String
  ageRating: String
  artist: String
  genre: String
  format: String
  platform: String
  licenseType: String
  serviceDuration: String
  certification: String
}

input UpdateVariantInput {
  allowBackorder: Boolean
  attributes: [VariantAttributeInput!]
  barcode: String
  compareAtPriceCents: Float
  priceCents: Float
  sku: String
  stockQuantity: Float
  title: String
  trackInventory: Boolean
  weightGrams: Float
}

type UserType {
  agreeToTerms: Boolean!
  email: String!
  firstName: String
  id: ID!
  lastName: String
  name: String
  phone: String
  role: Role!
  subscribeNewsletter: Boolean!
}

input VariantAttributeInput {
  name: String!
  value: String!
}

type VendorType {
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  slug: String!
}